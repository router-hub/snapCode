int Solution::findMedian(vector<vector<int> > &A) {
    int n = A.size(), m = A[0].size();
    int low=1,high=1e9;
    int desiredCount = (n*m)/2;
    
    while(low<=high){
        int mid = low + (high-low)/2;
        int count = 0;
        for(int i=0;i<n;i++){
            count += upper_bound(A[i].begin(),A[i].end(),mid) - A[i].begin();
        }        
        if(count <= desiredCount)
        low = mid+1;
        else 
        high = mid-1;
    }
    return low;
}
